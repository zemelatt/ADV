{"version":3,"file":"static/js/645.c2a44996.chunk.js","mappings":"oHAeA,IAbiB,SAAH,GAA6C,IAAvCA,EAAM,EAANA,OAAQC,EAAO,EAAPA,QAASC,EAAG,EAAHA,IAAKC,EAAS,EAATA,UACxC,OACE,gBAAKC,UAAWH,EAAQ,UACtB,iBAAKG,UAAWJ,EAAO,WACrB,eAAIK,MAAO,CAAEC,MAAO,SAAU,SAAEJ,KAChC,mBAAQE,UAAU,UAAUG,QAAS,kBAAMJ,EAAU,SAAS,EAAC,UAC7D,eAAIE,MAAO,CAAEC,MAAO,SAAU,SAAC,aAKzC,C,uJCsIA,EA1Ie,WACb,IAAME,EAASC,eAAeC,QAAQ,UAEhCC,GAAOC,EAAAA,EAAAA,MACLC,GAAOC,EAAAA,EAAAA,MAAPD,GAER,GAAsCE,EAAAA,EAAAA,YAAU,eAAzCC,EAAW,KAAEC,EAAc,KAClC,GAAkCF,EAAAA,EAAAA,UAAS,IAAG,eAAvCG,EAAS,KAAEC,EAAY,KAC9B,GAA8BJ,EAAAA,EAAAA,UAAS,IAAG,eAAnCK,EAAO,KAAEC,EAAU,KAC1B,GAAsCN,EAAAA,EAAAA,UAAS,IAAG,eAA3CO,EAAW,KAAEC,EAAc,KAClC,GAAsBR,EAAAA,EAAAA,UAAS,IAAG,eAA3Bb,EAAG,KAAEsB,EAAM,MAelBC,EAAAA,EAAAA,YAAU,YACQ,SAACZ,GACfa,EAAAA,EAAAA,IAAU,kCAAD,OAAmCb,GAAM,CAChDc,iBAAiB,IAChBC,MAAK,SAACC,GACPZ,EAAeY,EAASC,KAAK,GAAGd,aAChCG,EAAaU,EAASC,KAAK,GAAGZ,WAC9BG,EAAWQ,EAASC,KAAK,GAAGV,SAC5BG,EAAeM,EAASC,KAAK,GAAGR,YAClC,GACF,CACAS,CAAQlB,EACV,GAAG,CAACA,IA6BJ,OACE,gBAAKT,UAAU,oBAAmB,UAQhC,kBAAMA,UAAU,gBAAe,WAC7B,eAAIA,UAAU,QAAO,SAAC,sBAEtB,gBAAIA,UAAU,eAAc,UAAEF,EAAI,QAClC,kBAAOE,UAAU,YAAW,SAAC,cAC7B,SAAC4B,EAAA,EAAW,CACVC,eAAe,cACfC,SAAS,OACTC,YAAY,cACZC,cAAc,WACdC,WAAW,MACXC,iBA1EW,SAACC,GAClBtB,EAAesB,EAAEC,OAAOC,MAC1B,EAyEQC,aAAc1B,KAGhB,kBAAOZ,UAAU,YAAW,SAAC,uBAC7B,SAAC4B,EAAA,EAAW,CACVC,eAAe,cACfC,SAAS,OACTC,YAAY,YACZC,cAAc,mBACdC,WAAW,MACXC,iBAlFS,SAACC,GAChBpB,EAAaoB,EAAEC,OAAOC,MACxB,EAiFQC,aAAcxB,KAEhB,kBAAOd,UAAU,YAAW,SAAC,uBAC7B,oBACEA,UAAU,cACVuC,KAAK,OACLC,KAAK,UACLC,aAAa,MACbJ,MAAOrB,EACP0B,SAzFQ,SAACP,GACflB,EAAWkB,EAAEC,OAAOC,MACtB,EAuF0B,WAElB,mBAAQA,MAAM,UAAS,SAAC,aACxB,mBAAQA,MAAM,WAAU,SAAC,eACzB,mBAAQA,MAAM,WAAU,SAAC,cACzB,mBAAQA,MAAM,kBAAiB,SAAC,qBAChC,mBAAQA,MAAM,WAAU,SAAC,iBAG3B,kBAAOrC,UAAU,YAAW,SAAC,iCAE7B,SAAC2C,EAAA,EAAc,CACbd,eAAe,cACfC,SAAS,OACTC,YAAY,cACZC,cAAc,4CACdC,WAAW,MACXW,YAAY,IACZC,cAAc,KACdX,iBAzGe,SAACC,GACtBhB,EAAegB,EAAEC,OAAOC,MAC1B,EAwGQC,aAAcpB,KAGhB,mBAAQlB,UAAU,WAAWuC,KAAK,UAAUpC,QA5FnC,SAACgC,GACdA,EAAEW,iBACF,IAAIC,EAAW,IAAIC,SACnBD,EAASE,OAAO,cAAerC,GAC/BmC,EAASE,OAAO,YAAanC,GAC7BiC,EAASE,OAAO,UAAWjC,GAC3B+B,EAASE,OAAO,cAAe/B,GAG5BJ,EAAUoC,QACVtC,EAAYsC,QACZlC,EAAQkC,QACRhC,EAAYgC,QAIb5B,EAAAA,EAAAA,KAAW,gCAAD,OAAiCb,GAAMsC,EAAU,CACzDxB,iBAAiB,IAChBC,MAAK,SAACC,GACPL,EAAOK,EAASC,KAAKyB,KAErBC,UAAU,cACVrD,UAAU,QACZ,IACAQ,EAAK,WAAD,OAAYH,KAVhBgB,EAAO,gCAYX,EAkEkE,SAAC,eAMrE,C,4CCrHA,IA1BoB,SAAH,GAUV,IATLS,EAAc,EAAdA,eACAC,EAAQ,EAARA,SACAC,EAAW,EAAXA,YACAC,EAAa,EAAbA,cACAC,EAAU,EAAVA,WACAC,EAAgB,EAAhBA,iBACAI,EAAY,EAAZA,aACAe,EAAU,EAAVA,WACAC,EAAQ,EAARA,SAEA,OACE,kBACEtD,UAAW6B,EACXU,KAAMT,EACNU,KAAMT,EACNwB,YAAavB,EACbS,aAAcR,EACdS,SAAUR,EACVG,MAAOC,EACPkB,OAAQH,EACRI,IAAKH,GAGX,C,4CCEA,IA1BuB,SAAH,GAUb,IATLzB,EAAc,EAAdA,eACAC,EAAQ,EAARA,SACAC,EAAW,EAAXA,YACAC,EAAa,EAAbA,cACAC,EAAU,EAAVA,WACAW,EAAW,EAAXA,YACAC,EAAa,EAAbA,cACAX,EAAgB,EAAhBA,iBACAI,EAAY,EAAZA,aAEA,OACE,qBACEtC,UAAW6B,EACXU,KAAMT,EACNyB,YAAavB,EACbQ,KAAMT,EACN2B,KAAMd,EACNe,OAAQd,EACRJ,aAAcR,EACdI,MAAOC,EACPI,SAAUR,GAGhB,C","sources":["Component/Add-Adventure/LoginErr.js","Component/Adventure/myAdv/Update.js","Component/Input-and-textarea-Formats/InputFormat.js","Component/Input-and-textarea-Formats/TextAreaFormat.js"],"sourcesContent":["import React from \"react\";\r\n\r\nconst LoginErr = ({ classs, classs2, err, setclass2 }) => {\r\n  return (\r\n    <div className={classs2}>\r\n      <div className={classs}>\r\n        <h3 style={{ color: \"black\" }}>{err}</h3>\r\n        <button className=\"portBtn\" onClick={() => setclass2(\"hidden\")}>\r\n          <h1 style={{ color: \"white\" }}>OK</h1>\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginErr;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useParams, useNavigate } from \"react-router-dom\";\r\nimport Axios from \"axios\";\r\n\r\nimport \"./update.css\";\r\nimport TextAreaFormat from \"../../Input-and-textarea-Formats/TextAreaFormat\";\r\nimport InputFormat from \"../../Input-and-textarea-Formats/InputFormat\";\r\nimport LoginErr from \"../../Add-Adventure/LoginErr\";\r\n\r\nconst Update = () => {\r\n  const userId = sessionStorage.getItem(\"userId\");\r\n\r\n  const push = useNavigate();\r\n  const { id } = useParams();\r\n\r\n  const [countryName, setCountryName] = useState();\r\n  const [placeName, setPlaceName] = useState(\"\");\r\n  const [advType, setAdvType] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const [err, setErr] = useState(\"\");\r\n\r\n  const getCountry = (e) => {\r\n    setCountryName(e.target.value);\r\n  };\r\n  const getPlace = (e) => {\r\n    setPlaceName(e.target.value);\r\n  };\r\n  const getType = (e) => {\r\n    setAdvType(e.target.value);\r\n  };\r\n  const getDiscription = (e) => {\r\n    setDescription(e.target.value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const getFile = (id) => {\r\n      Axios.get(`http://localhost:2222/updating/${id}`, {\r\n        withCredentials: true,\r\n      }).then((response) => {\r\n        setCountryName(response.data[0].countryName);\r\n        setPlaceName(response.data[0].placeName);\r\n        setAdvType(response.data[0].advType);\r\n        setDescription(response.data[0].description);\r\n      });\r\n    };\r\n    getFile(id);\r\n  }, [id]);\r\n  const update = (e) => {\r\n    e.preventDefault();\r\n    let formData = new FormData();\r\n    formData.append(\"countryName\", countryName);\r\n    formData.append(\"placeName\", placeName);\r\n    formData.append(\"advType\", advType);\r\n    formData.append(\"description\", description);\r\n\r\n    if (\r\n      !placeName.trim() ||\r\n      !countryName.trim() ||\r\n      !advType.trim() ||\r\n      !description.trim()\r\n    ) {\r\n      setErr(\"Err: all forms must be filled\");\r\n    } else {\r\n      Axios.post(`http://localhost:2222/update/${id}`, formData, {\r\n        withCredentials: true,\r\n      }).then((response) => {\r\n        setErr(response.data.msg);\r\n\r\n        setCllass(\"MODELstyle\");\r\n        setclass2(\"cover\");\r\n      });\r\n      push(`/my-adv/${userId}`);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"newAdv-containers\">\r\n      {/* <LoginErr\r\n        setclass2={setclass2}\r\n        classs2={classs2}\r\n        classs={classs}\r\n        err={err}\r\n        removeport={removeport}\r\n      /> */}\r\n      <form className=\"edit-Adv-Form\">\r\n        <h3 className=\"heads\">Update Adventure</h3>\r\n\r\n        <h4 className=\"errDisplayer\">{err} </h4>\r\n        <label className=\"labelName\">Country </label>\r\n        <InputFormat\r\n          InputClassName=\"inputHolder\"\r\n          TextType=\"text\"\r\n          NameOfInput=\"countryName\"\r\n          OnPlaceHolder=\"Ethiopia\"\r\n          AutoOption=\"off\"\r\n          OnChangingInputs={getCountry}\r\n          ValueOfInput={countryName}\r\n        />\r\n\r\n        <label className=\"labelName\">Name of the Place</label>\r\n        <InputFormat\r\n          InputClassName=\"inputHolder\"\r\n          TextType=\"text\"\r\n          NameOfInput=\"placeName\"\r\n          OnPlaceHolder=\"Dashin mountains\"\r\n          AutoOption=\"off\"\r\n          OnChangingInputs={getPlace}\r\n          ValueOfInput={placeName}\r\n        />\r\n        <label className=\"labelName\">Type of Adventure</label>\r\n        <select\r\n          className=\"inputHolder\"\r\n          type=\"text\"\r\n          name=\"advType\"\r\n          autoComplete=\"off\"\r\n          value={advType}\r\n          onChange={getType}\r\n        >\r\n          <option value=\"Camping\">Camping</option>\r\n          <option value=\"Canoeing\">Skydiving</option>\r\n          <option value=\"Climbing\">Climbing</option>\r\n          <option value=\"Mountain biking\">Mountain biking</option>\r\n          <option value=\"Trekking\">Trekking</option>\r\n        </select>\r\n\r\n        <label className=\"labelName\">Description about the place</label>\r\n\r\n        <TextAreaFormat\r\n          InputClassName=\"inputHolder\"\r\n          TextType=\"text\"\r\n          NameOfInput=\"description\"\r\n          OnPlaceHolder=\"discribe the place by more than 200 words\"\r\n          AutoOption=\"off\"\r\n          RowsOfInput=\"5\"\r\n          ColumnOfInput=\"50\"\r\n          OnChangingInputs={getDiscription}\r\n          ValueOfInput={description}\r\n        />\r\n\r\n        <button className=\"edit-btn\" type=\"submitt\" onClick={update}>\r\n          Update\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Update;\r\n","import React from \"react\";\r\n\r\nconst InputFormat = ({\r\n  InputClassName,\r\n  TextType,\r\n  NameOfInput,\r\n  OnPlaceHolder,\r\n  AutoOption,\r\n  OnChangingInputs,\r\n  ValueOfInput,\r\n  AcceptAttr,\r\n  RefValue,\r\n}) => {\r\n  return (\r\n    <input\r\n      className={InputClassName}\r\n      type={TextType}\r\n      name={NameOfInput}\r\n      placeholder={OnPlaceHolder}\r\n      autoComplete={AutoOption}\r\n      onChange={OnChangingInputs}\r\n      value={ValueOfInput}\r\n      accept={AcceptAttr}\r\n      ref={RefValue}\r\n    />\r\n  );\r\n};\r\n\r\nexport default InputFormat;\r\n","import React from \"react\";\r\n\r\nconst TextAreaFormat = ({\r\n  InputClassName,\r\n  TextType,\r\n  NameOfInput,\r\n  OnPlaceHolder,\r\n  AutoOption,\r\n  RowsOfInput,\r\n  ColumnOfInput,\r\n  OnChangingInputs,\r\n  ValueOfInput,\r\n}) => {\r\n  return (\r\n    <textarea\r\n      className={InputClassName}\r\n      type={TextType}\r\n      placeholder={OnPlaceHolder}\r\n      name={NameOfInput}\r\n      rows={RowsOfInput}\r\n      column={ColumnOfInput}\r\n      autoComplete={AutoOption}\r\n      value={ValueOfInput}\r\n      onChange={OnChangingInputs}\r\n    />\r\n  );\r\n};\r\n\r\nexport default TextAreaFormat;\r\n"],"names":["classs","classs2","err","setclass2","className","style","color","onClick","userId","sessionStorage","getItem","push","useNavigate","id","useParams","useState","countryName","setCountryName","placeName","setPlaceName","advType","setAdvType","description","setDescription","setErr","useEffect","Axios","withCredentials","then","response","data","getFile","InputFormat","InputClassName","TextType","NameOfInput","OnPlaceHolder","AutoOption","OnChangingInputs","e","target","value","ValueOfInput","type","name","autoComplete","onChange","TextAreaFormat","RowsOfInput","ColumnOfInput","preventDefault","formData","FormData","append","trim","msg","setCllass","AcceptAttr","RefValue","placeholder","accept","ref","rows","column"],"sourceRoot":""}