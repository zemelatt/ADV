{"version":3,"file":"static/js/597.144bb8ce.chunk.js","mappings":"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","sources":["Component/Add-Adventure/Add-New-Adventure.js","Component/Add-Adventure/LoginErr.js","Component/Input-and-textarea-Formats/InputFormat.js","Component/Input-and-textarea-Formats/TextAreaFormat.js"],"sourcesContent":["import React, { useState, useRef } from \"react\";\r\nimport Axios from \"axios\";\r\n\r\nimport LoginErr from \"./LoginErr\";\r\nimport \"./Add-New-Adv.css\";\r\nimport InputFormat from \"../Input-and-textarea-Formats/InputFormat\";\r\nimport TextAreaFormat from \"../Input-and-textarea-Formats/TextAreaFormat\";\r\nimport Im from \"../../asset/toomas-tartes-Yizrl9N_eDA-unsplash (1).jpg\";\r\n\r\nconst AddNewAdventure = () => {\r\n  const [classs, setCllass] = useState(\"ad\");\r\n  const [classs2, setclass2] = useState(\"\");\r\n  const inputRef = useRef(null);\r\n  const [photo, setPhoto] = useState(\"\");\r\n  const [countryName, setCountryName] = useState(\"\");\r\n  const [placeName, setPlaceName] = useState(\"\");\r\n  const [advType, setAdvType] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const [err, setErr] = useState(\"\");\r\n\r\n  const getPhoto = (e) => {\r\n    setPhoto(e.target.files[0]);\r\n  };\r\n  const getCountry = (e) => {\r\n    setCountryName(e.target.value);\r\n  };\r\n  const getPlace = (e) => {\r\n    setPlaceName(e.target.value);\r\n  };\r\n  const getType = (e) => {\r\n    setAdvType(e.target.value);\r\n  };\r\n  const getDiscription = (e) => {\r\n    setDescription(e.target.value);\r\n  };\r\n\r\n  const removeport = () => {\r\n    setCllass(\"ad\");\r\n    setclass2(\"\");\r\n  };\r\n  const SubmittInputs = (e) => {\r\n    e.preventDefault();\r\n    let formData = new FormData();\r\n    formData.append(\"countryName\", countryName);\r\n    formData.append(\"placeName\", placeName);\r\n    formData.append(\"advType\", advType);\r\n    formData.append(\"description\", description);\r\n    formData.append(\"photo\", photo);\r\n\r\n    if (\r\n      !placeName.trim() ||\r\n      !countryName.trim() ||\r\n      !advType.trim() ||\r\n      !description.trim() ||\r\n      !photo\r\n    ) {\r\n      setErr(\"Err: all forms must be filled\");\r\n    } else if (description.trim().length < 200) {\r\n      setErr(\"Err: description should not be less than 200 words\");\r\n    } else {\r\n      Axios.post(\"http://localhost:2222/sharing_adventure\", formData, {\r\n        withCredentials: true,\r\n      }).then((response) => {\r\n        setErr(response.data.msg);\r\n        setCllass(\"MODELstyle\");\r\n        setclass2(\"cover\");\r\n      });\r\n\r\n      setCountryName(\"\");\r\n      setAdvType(\"\");\r\n      setDescription(\"\");\r\n      setPlaceName(\"\");\r\n      setPhoto(\"\");\r\n      inputRef.current.value = null;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"newAdvcontainer\">\r\n      <LoginErr\r\n        setclass2={setclass2}\r\n        classs2={classs2}\r\n        classs={classs}\r\n        err={err}\r\n        removeport={removeport}\r\n      />\r\n      <div className=\"flex\">\r\n        <form className=\"newAdv-Form\">\r\n          <h3 className=\"head\">Share your adventure</h3>\r\n          <h4 className=\"errDisplayer\">{err} </h4>\r\n          <label className=\"formQ\">Country </label>\r\n          <InputFormat\r\n            InputClassName={\"inputHold\"}\r\n            TextType=\"text\"\r\n            NameOfInput=\"countryName\"\r\n            OnPlaceHolder=\"Ethiopia\"\r\n            AutoOption=\"off\"\r\n            OnChangingInputs={getCountry}\r\n            ValueOfInput={countryName}\r\n          />\r\n\r\n          <label className=\"formQ\">Name of the Place</label>\r\n\r\n          <InputFormat\r\n            InputClassName={\"inputHold\"}\r\n            TextType=\"text\"\r\n            NameOfInput=\"placeName\"\r\n            OnPlaceHolder=\"Dashin mountains\"\r\n            AutoOption=\"off\"\r\n            OnChangingInputs={getPlace}\r\n            ValueOfInput={placeName}\r\n          />\r\n\r\n          <label className=\"formQ\">Type of Adventure</label>\r\n          <select\r\n            className=\"inputHold\"\r\n            id=\"selects\"\r\n            type=\"text\"\r\n            name=\"advType\"\r\n            autoComplete=\"off\"\r\n            value={advType}\r\n            onChange={getType}\r\n          >\r\n            <option value=\"\">Select here</option>\r\n            <option value=\"yoga\">Yoga</option>\r\n            <option value=\"Camping\">Camping</option>\r\n            <option value=\"Canoeing\">Skydiving</option>\r\n            <option value=\"Climbing\">Climbing</option>\r\n            <option value=\"Mountain biking\">Mountain biking</option>\r\n            <option value=\"Trekking\">Trekking</option>\r\n          </select>\r\n\r\n          <label className=\"formQ\">Description about the place</label>\r\n\r\n          <TextAreaFormat\r\n            InputClassName=\"inputHold\"\r\n            TextType=\"text\"\r\n            NameOfInput=\"description\"\r\n            OnPlaceHolder=\"discribe the place by more than 200 words\"\r\n            AutoOption=\"off\"\r\n            RowsOfInput=\"5\"\r\n            ColumnOfInput=\"50\"\r\n            OnChangingInputs={getDiscription}\r\n            ValueOfInput={description}\r\n          />\r\n          <label className=\"formQ\">Photo</label>\r\n          <InputFormat\r\n            InputClassName={\"inputHold\"}\r\n            TextType=\"file\"\r\n            NameOfInput=\"photo\"\r\n            Accept=\"image/*\"\r\n            OnChangingInputs={getPhoto}\r\n            RefValue={inputRef}\r\n          />\r\n\r\n          <button className=\"Add-btn\" type=\"submitt\" onClick={SubmittInputs}>\r\n            Submit\r\n          </button>\r\n        </form>\r\n\r\n        <div className=\"adjusent\">\r\n          <img src={Im} alt=\"in\" className=\"imgAdd\" />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddNewAdventure;\r\n","import React from \"react\";\r\n\r\nconst LoginErr = ({ classs, classs2, err, setclass2 }) => {\r\n  return (\r\n    <div className={classs2}>\r\n      <div className={classs}>\r\n        <h3 style={{ color: \"black\" }}>{err}</h3>\r\n        <button className=\"portBtn\" onClick={() => setclass2(\"hidden\")}>\r\n          <h1 style={{ color: \"white\" }}>OK</h1>\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginErr;\r\n","import React from \"react\";\r\n\r\nconst InputFormat = ({\r\n  InputClassName,\r\n  TextType,\r\n  NameOfInput,\r\n  OnPlaceHolder,\r\n  AutoOption,\r\n  OnChangingInputs,\r\n  ValueOfInput,\r\n  AcceptAttr,\r\n  RefValue,\r\n}) => {\r\n  return (\r\n    <input\r\n      className={InputClassName}\r\n      type={TextType}\r\n      name={NameOfInput}\r\n      placeholder={OnPlaceHolder}\r\n      autoComplete={AutoOption}\r\n      onChange={OnChangingInputs}\r\n      value={ValueOfInput}\r\n      accept={AcceptAttr}\r\n      ref={RefValue}\r\n    />\r\n  );\r\n};\r\n\r\nexport default InputFormat;\r\n","import React from \"react\";\r\n\r\nconst TextAreaFormat = ({\r\n  InputClassName,\r\n  TextType,\r\n  NameOfInput,\r\n  OnPlaceHolder,\r\n  AutoOption,\r\n  RowsOfInput,\r\n  ColumnOfInput,\r\n  OnChangingInputs,\r\n  ValueOfInput,\r\n}) => {\r\n  return (\r\n    <textarea\r\n      className={InputClassName}\r\n      type={TextType}\r\n      placeholder={OnPlaceHolder}\r\n      name={NameOfInput}\r\n      rows={RowsOfInput}\r\n      column={ColumnOfInput}\r\n      autoComplete={AutoOption}\r\n      value={ValueOfInput}\r\n      onChange={OnChangingInputs}\r\n    />\r\n  );\r\n};\r\n\r\nexport default TextAreaFormat;\r\n"],"names":["useState","classs","setCllass","classs2","setclass2","inputRef","useRef","photo","setPhoto","countryName","setCountryName","placeName","setPlaceName","advType","setAdvType","description","setDescription","err","setErr","className","LoginErr","removeport","InputFormat","InputClassName","TextType","NameOfInput","OnPlaceHolder","AutoOption","OnChangingInputs","e","target","value","ValueOfInput","id","type","name","autoComplete","onChange","TextAreaFormat","RowsOfInput","ColumnOfInput","Accept","files","RefValue","onClick","preventDefault","formData","FormData","append","trim","length","Axios","withCredentials","then","response","data","msg","current","src","Im","alt","style","color","AcceptAttr","placeholder","accept","ref","rows","column"],"sourceRoot":""}