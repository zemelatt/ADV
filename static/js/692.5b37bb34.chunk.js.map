{"version":3,"file":"static/js/692.5b37bb34.chunk.js","mappings":"oHA4BA,IA1BoB,SAAH,GAUV,IATLA,EAAc,EAAdA,eACAC,EAAQ,EAARA,SACAC,EAAW,EAAXA,YACAC,EAAa,EAAbA,cACAC,EAAU,EAAVA,WACAC,EAAgB,EAAhBA,iBACAC,EAAY,EAAZA,aACAC,EAAU,EAAVA,WACAC,EAAQ,EAARA,SAEA,OACE,kBACEC,UAAWT,EACXU,KAAMT,EACNU,KAAMT,EACNU,YAAaT,EACbU,aAAcT,EACdU,SAAUT,EACVU,MAAOT,EACPU,OAAQT,EACRU,IAAKT,GAGX,C,uGCiCA,UAnDgB,WACd,IAAQU,GAAOC,EAAAA,EAAAA,MAAPD,GACFE,GAAOC,EAAAA,EAAAA,MACb,GAAsBC,EAAAA,EAAAA,UAAS,IAAG,eAA3BC,EAAG,KAAEC,EAAM,KAClB,GAAgCF,EAAAA,EAAAA,UAAS,IAAG,eAArCG,EAAQ,KAAEC,EAAW,KAmB5B,OACE,0BACE,gBAAKjB,UAAU,iBAAgB,UAC7B,iBAAKA,UAAU,UAAS,WACtB,eAAIA,UAAU,SAAQ,SAAC,qBACvB,eAAIA,UAAU,eAAc,SAAEc,KAE9B,iBAAKd,UAAU,iBAAgB,WAC7B,2BAAO,kBACP,SAAC,IAAW,CACVT,eAAe,UACfC,SAAS,WACTC,YAAY,WACZC,cAAc,oBACdE,iBAhCQ,SAACsB,GACnBD,EAAYC,EAAEC,OAAOb,MACvB,EA+BYT,aAAcmB,QAIlB,mBAAQhB,UAAU,aAAaoB,QAlCvB,SAACF,GACfA,EAAEG,iBACF,IAAIC,EAAW,IAAIC,SAEnB,GADAD,EAASE,OAAO,WAAYR,GACvBA,EAASS,OAQZ,OALAC,EAAAA,EAAAA,KAAW,qCAAD,OAAsCjB,GAAMa,GAAUK,MAC9D,SAACC,GACCb,EAAOa,EAASC,KAAKC,IACvB,IAEKnB,EAAK,UAPZI,EAAO,qCASX,EAoBwD,SAAC,uBAO3D,C","sources":["Component/Input-and-textarea-Formats/InputFormat.js","Component/Register-Login/NewPass.js"],"sourcesContent":["import React from \"react\";\r\n\r\nconst InputFormat = ({\r\n  InputClassName,\r\n  TextType,\r\n  NameOfInput,\r\n  OnPlaceHolder,\r\n  AutoOption,\r\n  OnChangingInputs,\r\n  ValueOfInput,\r\n  AcceptAttr,\r\n  RefValue,\r\n}) => {\r\n  return (\r\n    <input\r\n      className={InputClassName}\r\n      type={TextType}\r\n      name={NameOfInput}\r\n      placeholder={OnPlaceHolder}\r\n      autoComplete={AutoOption}\r\n      onChange={OnChangingInputs}\r\n      value={ValueOfInput}\r\n      accept={AcceptAttr}\r\n      ref={RefValue}\r\n    />\r\n  );\r\n};\r\n\r\nexport default InputFormat;\r\n","import React, { useState } from \"react\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\n\r\nimport Axios from \"axios\";\r\n\r\nimport \"./register-login.css\";\r\nimport InputFormat from \"../Input-and-textarea-Formats/InputFormat\";\r\n\r\nconst NewPass = () => {\r\n  const { id } = useParams();\r\n  const push = useNavigate();\r\n  const [err, setErr] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const getPassword = (e) => {\r\n    setPassword(e.target.value);\r\n  };\r\n  const submitt = (e) => {\r\n    e.preventDefault();\r\n    let formData = new FormData();\r\n    formData.append(\"password\", password);\r\n    if (!password.trim()) {\r\n      setErr(\"Err: pls insert the new password !\");\r\n    } else {\r\n      Axios.post(`http://localhost:2222/newPassword/${id}`, formData).then(\r\n        (response) => {\r\n          setErr(response.data.msg);\r\n        }\r\n      );\r\n      return push(\"/login\");\r\n    }\r\n  };\r\n  return (\r\n    <div>\r\n      <div className=\"form-container\">\r\n        <div className=\"regForm\">\r\n          <h1 className=\"header\">Insert Password</h1>\r\n          <h4 className=\"errDisplayer\">{err}</h4>\r\n\r\n          <div className=\"inputdisplayer\">\r\n            <label>New Password</label>\r\n            <InputFormat\r\n              InputClassName=\"inputPl\"\r\n              TextType=\"password\"\r\n              NameOfInput=\"password\"\r\n              OnPlaceHolder=\"Your New Password\"\r\n              OnChangingInputs={getPassword}\r\n              ValueOfInput={password}\r\n            />\r\n          </div>\r\n\r\n          <button className=\"submit-btn\" onClick={submitt}>\r\n            New Password\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewPass;\r\n"],"names":["InputClassName","TextType","NameOfInput","OnPlaceHolder","AutoOption","OnChangingInputs","ValueOfInput","AcceptAttr","RefValue","className","type","name","placeholder","autoComplete","onChange","value","accept","ref","id","useParams","push","useNavigate","useState","err","setErr","password","setPassword","e","target","onClick","preventDefault","formData","FormData","append","trim","Axios","then","response","data","msg"],"sourceRoot":""}