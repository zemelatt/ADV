{"version":3,"file":"static/js/191.4267e036.chunk.js","mappings":"oHA4BA,IA1BoB,SAAH,GAUV,IATLA,EAAc,EAAdA,eACAC,EAAQ,EAARA,SACAC,EAAW,EAAXA,YACAC,EAAa,EAAbA,cACAC,EAAU,EAAVA,WACAC,EAAgB,EAAhBA,iBACAC,EAAY,EAAZA,aACAC,EAAU,EAAVA,WACAC,EAAQ,EAARA,SAEA,OACE,kBACEC,UAAWT,EACXU,KAAMT,EACNU,KAAMT,EACNU,YAAaT,EACbU,aAAcT,EACdU,SAAUT,EACVU,MAAOT,EACPU,OAAQT,EACRU,IAAKT,GAGX,C,iHCiEA,UApFmB,WACjB,IAAMU,GAAOC,EAAAA,EAAAA,MAEb,GAAsBC,EAAAA,EAAAA,UAAS,IAAG,eAA3BC,EAAG,KAAEC,EAAM,KAClB,GAAwBF,EAAAA,EAAAA,UAAS,IAAG,eAA7BT,EAAI,KAAEY,EAAO,KACpB,GAA6BH,EAAAA,EAAAA,UAAS,IAAG,eAAlCI,EAAK,KAAEC,EAAW,KAgCzB,OACE,0BACE,gBAAKhB,UAAU,iBAAgB,UAC7B,iBAAKA,UAAU,UAAS,WACtB,eAAIA,UAAU,SAAQ,SAAC,wBACvB,eAAIA,UAAU,eAAc,SAAEY,KAC9B,iBAAKZ,UAAU,iBAAgB,WAC7B,2BAAO,WACP,SAAC,IAAW,CACVT,eAAe,UACfC,SAAS,OACTC,YAAY,OACZC,cAAc,uBACdC,WAAW,MACXC,iBA7CI,SAACqB,GACfH,EAAQG,EAAEC,OAAOZ,MACnB,EA4CYT,aAAcK,QAGlB,iBAAKF,UAAU,iBAAgB,WAC7B,2BAAO,WAEP,SAAC,IAAW,CACVT,eAAe,UACfC,SAAS,QACTC,YAAY,QACZC,cAAc,wBACdC,WAAW,MACXC,iBAtDK,SAACqB,GAChBD,EAAYC,EAAEC,OAAOZ,MACvB,EAqDYT,aAAckB,QAIlB,mBAAQf,UAAU,aAAamB,QAvDvB,SAACF,GACfA,EAAEG,iBAEF,IAAIC,EAAW,IAAIC,SACnBD,EAASE,OAAO,OAAQrB,GACxBmB,EAASE,OAAO,QAASR,GAEpBb,EAAKsB,OAEET,EAAMS,OAGhBC,EAAAA,EAAAA,KAAW,2CAA4CJ,EAAU,CAC/DK,iBAAiB,IAChBC,MAAK,SAACC,GACP,QAAyBC,GAArBD,EAASE,KAAKC,IAChB,OAAOtB,EAAK,iBAAD,OAAkBmB,EAASE,KAAKE,KAAK,GAAGC,KAEnDpB,EAAOe,EAASE,KAAKC,IAEzB,IAVAlB,EAAO,0BAFPA,EAAO,qBAcX,EAiCwD,SAAC,YAGjD,eAAGqB,MAAO,CAAEC,MAAO,SAAU,UAAC,+BACC,OAC7B,SAAC,KAAI,CAACC,GAAG,YAAYF,MAAO,CAAEC,MAAO,aAAc,SAAC,sBAQhE,C","sources":["Component/Input-and-textarea-Formats/InputFormat.js","Component/Register-Login/ForgotPass.js"],"sourcesContent":["import React from \"react\";\r\n\r\nconst InputFormat = ({\r\n  InputClassName,\r\n  TextType,\r\n  NameOfInput,\r\n  OnPlaceHolder,\r\n  AutoOption,\r\n  OnChangingInputs,\r\n  ValueOfInput,\r\n  AcceptAttr,\r\n  RefValue,\r\n}) => {\r\n  return (\r\n    <input\r\n      className={InputClassName}\r\n      type={TextType}\r\n      name={NameOfInput}\r\n      placeholder={OnPlaceHolder}\r\n      autoComplete={AutoOption}\r\n      onChange={OnChangingInputs}\r\n      value={ValueOfInput}\r\n      accept={AcceptAttr}\r\n      ref={RefValue}\r\n    />\r\n  );\r\n};\r\n\r\nexport default InputFormat;\r\n","import React, { useState } from \"react\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport Axios from \"axios\";\r\n\r\nimport \"./register-login.css\";\r\nimport InputFormat from \"../Input-and-textarea-Formats/InputFormat\";\r\n\r\nconst ForgotPass = () => {\r\n  const push = useNavigate();\r\n\r\n  const [err, setErr] = useState(\"\");\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setPassword] = useState(\"\");\r\n  const getName = (e) => {\r\n    setName(e.target.value);\r\n  };\r\n\r\n  const getEmail = (e) => {\r\n    setPassword(e.target.value);\r\n  };\r\n\r\n  const submitt = (e) => {\r\n    e.preventDefault();\r\n\r\n    let formData = new FormData();\r\n    formData.append(\"name\", name);\r\n    formData.append(\"email\", email);\r\n\r\n    if (!name.trim()) {\r\n      setErr(\"Err: name is empty\");\r\n    } else if (!email.trim()) {\r\n      setErr(\"Err: password is empty\");\r\n    } else {\r\n      Axios.post(\"http://localhost:2222/formating/password\", formData, {\r\n        withCredentials: true,\r\n      }).then((response) => {\r\n        if (response.data.msg == undefined) {\r\n          return push(`/new-password/${response.data.next[0].id}`);\r\n        } else {\r\n          setErr(response.data.msg);\r\n        }\r\n      });\r\n    }\r\n  };\r\n  return (\r\n    <div>\r\n      <div className=\"form-container\">\r\n        <div className=\"regForm\">\r\n          <h1 className=\"header\">Formating password</h1>\r\n          <h4 className=\"errDisplayer\">{err}</h4>\r\n          <div className=\"inputdisplayer\">\r\n            <label>Name </label>\r\n            <InputFormat\r\n              InputClassName=\"inputPl\"\r\n              TextType=\"text\"\r\n              NameOfInput=\"name\"\r\n              OnPlaceHolder=\"your registered name\"\r\n              AutoOption=\"off\"\r\n              OnChangingInputs={getName}\r\n              ValueOfInput={name}\r\n            />\r\n          </div>\r\n          <div className=\"inputdisplayer\">\r\n            <label>Email</label>\r\n\r\n            <InputFormat\r\n              InputClassName=\"inputPl\"\r\n              TextType=\"email\"\r\n              NameOfInput=\"email\"\r\n              OnPlaceHolder=\"your registered email\"\r\n              AutoOption=\"off\"\r\n              OnChangingInputs={getEmail}\r\n              ValueOfInput={email}\r\n            />\r\n          </div>\r\n\r\n          <button className=\"submit-btn\" onClick={submitt}>\r\n            Format\r\n          </button>\r\n          <p style={{ color: \"white\" }}>\r\n            If you don't have an account{\"   \"}\r\n            <Link to=\"/register\" style={{ color: \"lightblue\" }}>\r\n              Register\r\n            </Link>\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ForgotPass;\r\n"],"names":["InputClassName","TextType","NameOfInput","OnPlaceHolder","AutoOption","OnChangingInputs","ValueOfInput","AcceptAttr","RefValue","className","type","name","placeholder","autoComplete","onChange","value","accept","ref","push","useNavigate","useState","err","setErr","setName","email","setPassword","e","target","onClick","preventDefault","formData","FormData","append","trim","Axios","withCredentials","then","response","undefined","data","msg","next","id","style","color","to"],"sourceRoot":""}